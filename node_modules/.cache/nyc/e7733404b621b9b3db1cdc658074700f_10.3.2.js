var cov_2921q96vh4=function(){var path='/home/andrews/naivecoin/lib/blockchain/index.js',hash='16d1ffbdf9a88844253f178e70a1d759018bb416',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/andrews/naivecoin/lib/blockchain/index.js',statementMap:{'0':{start:{line:1,column:21},end:{line:1,column:38}},'1':{start:{line:2,column:10},end:{line:2,column:26}},'2':{start:{line:3,column:11},end:{line:3,column:32}},'3':{start:{line:4,column:15},end:{line:4,column:34}},'4':{start:{line:5,column:14},end:{line:5,column:32}},'5':{start:{line:6,column:21},end:{line:6,column:46}},'6':{start:{line:7,column:34},end:{line:7,column:72}},'7':{start:{line:8,column:28},end:{line:8,column:60}},'8':{start:{line:9,column:33},end:{line:9,column:70}},'9':{start:{line:12,column:24},end:{line:12,column:37}},'10':{start:{line:13,column:26},end:{line:13,column:45}},'11':{start:{line:16,column:24},end:{line:16,column:47}},'12':{start:{line:17,column:23},end:{line:17,column:24}},'13':{start:{line:18,column:18},end:{line:18,column:19}},'14':{start:{line:22,column:22},end:{line:22,column:32}},'15':{start:{line:26,column:8},end:{line:26,column:87}},'16':{start:{line:27,column:8},end:{line:27,column:101}},'17':{start:{line:30,column:8},end:{line:30,column:49}},'18':{start:{line:31,column:8},end:{line:31,column:67}},'19':{start:{line:34,column:8},end:{line:34,column:42}},'20':{start:{line:35,column:8},end:{line:35,column:20}},'21':{start:{line:40,column:8},end:{line:44,column:9}},'22':{start:{line:41,column:12},end:{line:41,column:67}},'23':{start:{line:42,column:12},end:{line:42,column:44}},'24':{start:{line:43,column:12},end:{line:43,column:45}},'25':{start:{line:47,column:8},end:{line:47,column:73}},'26':{start:{line:48,column:8},end:{line:48,column:88}},'27':{start:{line:52,column:8},end:{line:52,column:27}},'28':{start:{line:56,column:8},end:{line:56,column:61}},'29':{start:{line:60,column:8},end:{line:60,column:59}},'30':{start:{line:64,column:8},end:{line:64,column:35}},'31':{start:{line:72,column:8},end:{line:78,column:17}},'32':{start:{line:82,column:8},end:{line:82,column:33}},'33':{start:{line:86,column:8},end:{line:86,column:61}},'34':{start:{line:90,column:8},end:{line:90,column:109}},'35':{start:{line:95,column:8},end:{line:98,column:9}},'36':{start:{line:96,column:12},end:{line:96,column:76}},'37':{start:{line:97,column:12},end:{line:97,column:97}},'38':{start:{line:101,column:8},end:{line:101,column:39}},'39':{start:{line:104,column:8},end:{line:104,column:108}},'40':{start:{line:105,column:24},end:{line:105,column:92}},'41':{start:{line:108,column:8},end:{line:110,column:22}},'42':{start:{line:109,column:12},end:{line:109,column:40}},'43':{start:{line:112,column:8},end:{line:112,column:59}},'44':{start:{line:117,column:8},end:{line:120,column:9}},'45':{start:{line:118,column:12},end:{line:118,column:61}},'46':{start:{line:119,column:12},end:{line:119,column:82}},'47':{start:{line:123,column:8},end:{line:130,column:9}},'48':{start:{line:124,column:12},end:{line:126,column:13}},'49':{start:{line:125,column:16},end:{line:125,column:86}},'50':{start:{line:128,column:12},end:{line:128,column:52}},'51':{start:{line:129,column:12},end:{line:129,column:83}},'52':{start:{line:131,column:8},end:{line:131,column:20}},'53':{start:{line:136,column:8},end:{line:148,column:9}},'54':{start:{line:137,column:12},end:{line:137,column:39}},'55':{start:{line:138,column:12},end:{line:138,column:45}},'56':{start:{line:141,column:12},end:{line:141,column:67}},'57':{start:{line:143,column:12},end:{line:143,column:58}},'58':{start:{line:144,column:12},end:{line:144,column:70}},'59':{start:{line:145,column:12},end:{line:145,column:64}},'60':{start:{line:145,column:22},end:{line:145,column:64}},'61':{start:{line:147,column:12},end:{line:147,column:28}},'62':{start:{line:153,column:8},end:{line:162,column:9}},'63':{start:{line:154,column:12},end:{line:154,column:51}},'64':{start:{line:155,column:12},end:{line:155,column:57}},'65':{start:{line:157,column:12},end:{line:157,column:68}},'66':{start:{line:158,column:12},end:{line:158,column:82}},'67':{start:{line:159,column:12},end:{line:159,column:76}},'68':{start:{line:159,column:22},end:{line:159,column:76}},'69':{start:{line:161,column:12},end:{line:161,column:34}},'70':{start:{line:166,column:8},end:{line:166,column:148}},'71':{start:{line:166,column:56},end:{line:166,column:125}},'72':{start:{line:167,column:8},end:{line:167,column:53}},'73':{start:{line:171,column:26},end:{line:171,column:43}},'74':{start:{line:173,column:8},end:{line:185,column:9}},'75':{start:{line:174,column:12},end:{line:174,column:106}},'76':{start:{line:175,column:12},end:{line:175,column:122}},'77':{start:{line:176,column:15},end:{line:185,column:9}},'78':{start:{line:177,column:12},end:{line:177,column:115}},'79':{start:{line:178,column:12},end:{line:178,column:131}},'80':{start:{line:179,column:15},end:{line:185,column:9}},'81':{start:{line:180,column:12},end:{line:180,column:90}},'82':{start:{line:181,column:12},end:{line:181,column:106}},'83':{start:{line:182,column:15},end:{line:185,column:9}},'84':{start:{line:183,column:12},end:{line:183,column:161}},'85':{start:{line:184,column:12},end:{line:184,column:160}},'86':{start:{line:188,column:8},end:{line:188,column:75}},'87':{start:{line:191,column:32},end:{line:191,column:164}},'88':{start:{line:192,column:33},end:{line:192,column:150}},'89':{start:{line:194,column:60},end:{line:194,column:104}},'90':{start:{line:196,column:8},end:{line:199,column:9}},'91':{start:{line:197,column:12},end:{line:197,column:123}},'92':{start:{line:198,column:12},end:{line:198,column:182}},'93':{start:{line:202,column:33},end:{line:202,column:81}},'94':{start:{line:203,column:8},end:{line:206,column:9}},'95':{start:{line:204,column:12},end:{line:204,column:105}},'96':{start:{line:205,column:12},end:{line:205,column:121}},'97':{start:{line:208,column:8},end:{line:211,column:9}},'98':{start:{line:209,column:12},end:{line:209,column:111}},'99':{start:{line:210,column:12},end:{line:210,column:127}},'100':{start:{line:213,column:8},end:{line:213,column:20}},'101':{start:{line:218,column:8},end:{line:218,column:39}},'102':{start:{line:221,column:32},end:{line:223,column:23}},'103':{start:{line:222,column:12},end:{line:222,column:78}},'104':{start:{line:225,column:8},end:{line:228,column:9}},'105':{start:{line:226,column:12},end:{line:226,column:90}},'106':{start:{line:227,column:12},end:{line:227,column:125}},'107':{start:{line:231,column:41},end:{line:240,column:37}},'108':{start:{line:232,column:12},end:{line:239,column:32}},'109':{start:{line:242,column:8},end:{line:245,column:9}},'110':{start:{line:243,column:12},end:{line:243,column:92}},'111':{start:{line:244,column:12},end:{line:244,column:139}},'112':{start:{line:247,column:8},end:{line:247,column:20}},'113':{start:{line:252,column:24},end:{line:252,column:26}},'114':{start:{line:253,column:8},end:{line:264,column:26}},'115':{start:{line:254,column:12},end:{line:263,column:41}},'116':{start:{line:255,column:16},end:{line:255,column:67}},'117':{start:{line:255,column:60},end:{line:255,column:67}},'118':{start:{line:257,column:16},end:{line:262,column:19}},'119':{start:{line:267,column:23},end:{line:267,column:25}},'120':{start:{line:268,column:8},end:{line:279,column:25}},'121':{start:{line:270,column:16},end:{line:270,column:66}},'122':{start:{line:270,column:59},end:{line:270,column:66}},'123':{start:{line:272,column:16},end:{line:277,column:19}},'124':{start:{line:282,column:39},end:{line:282,column:41}},'125':{start:{line:283,column:8},end:{line:287,column:22}},'126':{start:{line:284,column:12},end:{line:286,column:13}},'127':{start:{line:284,column:36},end:{line:284,column:114}},'128':{start:{line:285,column:16},end:{line:285,column:56}},'129':{start:{line:289,column:8},end:{line:289,column:40}},'130':{start:{line:293,column:0},end:{line:293,column:28}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:25,column:4},end:{line:25,column:5}},loc:{start:{line:25,column:24},end:{line:36,column:5}},line:25},'1':{name:'(anonymous_1)',decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:11},end:{line:49,column:5}},line:38},'2':{name:'(anonymous_2)',decl:{start:{line:51,column:4},end:{line:51,column:5}},loc:{start:{line:51,column:19},end:{line:53,column:5}},line:51},'3':{name:'(anonymous_3)',decl:{start:{line:55,column:4},end:{line:55,column:5}},loc:{start:{line:55,column:27},end:{line:57,column:5}},line:55},'4':{name:'(anonymous_4)',decl:{start:{line:59,column:4},end:{line:59,column:5}},loc:{start:{line:59,column:25},end:{line:61,column:5}},line:59},'5':{name:'(anonymous_5)',decl:{start:{line:63,column:4},end:{line:63,column:5}},loc:{start:{line:63,column:19},end:{line:65,column:5}},line:63},'6':{name:'(anonymous_6)',decl:{start:{line:67,column:4},end:{line:67,column:5}},loc:{start:{line:67,column:25},end:{line:79,column:5}},line:67},'7':{name:'(anonymous_7)',decl:{start:{line:81,column:4},end:{line:81,column:5}},loc:{start:{line:81,column:25},end:{line:83,column:5}},line:81},'8':{name:'(anonymous_8)',decl:{start:{line:85,column:4},end:{line:85,column:5}},loc:{start:{line:85,column:27},end:{line:87,column:5}},line:85},'9':{name:'(anonymous_9)',decl:{start:{line:89,column:4},end:{line:89,column:5}},loc:{start:{line:89,column:44},end:{line:91,column:5}},line:89},'10':{name:'(anonymous_10)',decl:{start:{line:93,column:4},end:{line:93,column:5}},loc:{start:{line:93,column:32},end:{line:113,column:5}},line:93},'11':{name:'(anonymous_11)',decl:{start:{line:108,column:18},end:{line:108,column:19}},loc:{start:{line:108,column:29},end:{line:110,column:9}},line:108},'12':{name:'(anonymous_12)',decl:{start:{line:115,column:4},end:{line:115,column:5}},loc:{start:{line:115,column:37},end:{line:132,column:5}},line:115},'13':{name:'(anonymous_13)',decl:{start:{line:134,column:4},end:{line:134,column:5}},loc:{start:{line:134,column:36},end:{line:149,column:5}},line:134},'14':{name:'(anonymous_14)',decl:{start:{line:151,column:4},end:{line:151,column:5}},loc:{start:{line:151,column:48},end:{line:163,column:5}},line:151},'15':{name:'(anonymous_15)',decl:{start:{line:165,column:4},end:{line:165,column:5}},loc:{start:{line:165,column:54},end:{line:168,column:5}},line:165},'16':{name:'(anonymous_16)',decl:{start:{line:166,column:37},end:{line:166,column:38}},loc:{start:{line:166,column:54},end:{line:166,column:127}},line:166},'17':{name:'(anonymous_17)',decl:{start:{line:170,column:4},end:{line:170,column:5}},loc:{start:{line:170,column:40},end:{line:214,column:5}},line:170},'18':{name:'(anonymous_18)',decl:{start:{line:216,column:4},end:{line:216,column:5}},loc:{start:{line:216,column:34},end:{line:248,column:5}},line:216},'19':{name:'(anonymous_19)',decl:{start:{line:221,column:38},end:{line:221,column:39}},loc:{start:{line:221,column:49},end:{line:223,column:9}},line:221},'20':{name:'(anonymous_20)',decl:{start:{line:231,column:80},end:{line:231,column:81}},loc:{start:{line:231,column:93},end:{line:240,column:9}},line:231},'21':{name:'(anonymous_21)',decl:{start:{line:250,column:4},end:{line:250,column:5}},loc:{start:{line:250,column:46},end:{line:290,column:5}},line:250},'22':{name:'(anonymous_22)',decl:{start:{line:253,column:59},end:{line:253,column:60}},loc:{start:{line:253,column:76},end:{line:264,column:9}},line:253},'23':{name:'(anonymous_23)',decl:{start:{line:254,column:32},end:{line:254,column:33}},loc:{start:{line:254,column:53},end:{line:263,column:13}},line:254},'24':{name:'(anonymous_24)',decl:{start:{line:269,column:57},end:{line:269,column:58}},loc:{start:{line:269,column:70},end:{line:278,column:13}},line:269},'25':{name:'(anonymous_25)',decl:{start:{line:283,column:18},end:{line:283,column:19}},loc:{start:{line:283,column:32},end:{line:287,column:9}},line:283},'26':{name:'(anonymous_26)',decl:{start:{line:284,column:23},end:{line:284,column:24}},loc:{start:{line:284,column:36},end:{line:284,column:114}},line:284}},branchMap:{'0':{loc:{start:{line:40,column:8},end:{line:44,column:9}},type:'if',locations:[{start:{line:40,column:8},end:{line:44,column:9}},{start:{line:40,column:8},end:{line:44,column:9}}],line:40},'1':{loc:{start:{line:75,column:33},end:{line:75,column:60}},type:'binary-expr',locations:[{start:{line:75,column:33},end:{line:75,column:38}},{start:{line:75,column:42},end:{line:75,column:60}}],line:75},'2':{loc:{start:{line:95,column:8},end:{line:98,column:9}},type:'if',locations:[{start:{line:95,column:8},end:{line:98,column:9}},{start:{line:95,column:8},end:{line:98,column:9}}],line:95},'3':{loc:{start:{line:117,column:8},end:{line:120,column:9}},type:'if',locations:[{start:{line:117,column:8},end:{line:120,column:9}},{start:{line:117,column:8},end:{line:120,column:9}}],line:117},'4':{loc:{start:{line:134,column:23},end:{line:134,column:34}},type:'default-arg',locations:[{start:{line:134,column:30},end:{line:134,column:34}}],line:134},'5':{loc:{start:{line:136,column:8},end:{line:148,column:9}},type:'if',locations:[{start:{line:136,column:8},end:{line:148,column:9}},{start:{line:136,column:8},end:{line:148,column:9}}],line:136},'6':{loc:{start:{line:145,column:12},end:{line:145,column:64}},type:'if',locations:[{start:{line:145,column:12},end:{line:145,column:64}},{start:{line:145,column:12},end:{line:145,column:64}}],line:145},'7':{loc:{start:{line:151,column:35},end:{line:151,column:46}},type:'default-arg',locations:[{start:{line:151,column:42},end:{line:151,column:46}}],line:151},'8':{loc:{start:{line:153,column:8},end:{line:162,column:9}},type:'if',locations:[{start:{line:153,column:8},end:{line:162,column:9}},{start:{line:153,column:8},end:{line:162,column:9}}],line:153},'9':{loc:{start:{line:159,column:12},end:{line:159,column:76}},type:'if',locations:[{start:{line:159,column:12},end:{line:159,column:76}},{start:{line:159,column:12},end:{line:159,column:76}}],line:159},'10':{loc:{start:{line:173,column:8},end:{line:185,column:9}},type:'if',locations:[{start:{line:173,column:8},end:{line:185,column:9}},{start:{line:173,column:8},end:{line:185,column:9}}],line:173},'11':{loc:{start:{line:176,column:15},end:{line:185,column:9}},type:'if',locations:[{start:{line:176,column:15},end:{line:185,column:9}},{start:{line:176,column:15},end:{line:185,column:9}}],line:176},'12':{loc:{start:{line:179,column:15},end:{line:185,column:9}},type:'if',locations:[{start:{line:179,column:15},end:{line:185,column:9}},{start:{line:179,column:15},end:{line:185,column:9}}],line:179},'13':{loc:{start:{line:182,column:15},end:{line:185,column:9}},type:'if',locations:[{start:{line:182,column:15},end:{line:185,column:9}},{start:{line:182,column:15},end:{line:185,column:9}}],line:182},'14':{loc:{start:{line:196,column:8},end:{line:199,column:9}},type:'if',locations:[{start:{line:196,column:8},end:{line:199,column:9}},{start:{line:196,column:8},end:{line:199,column:9}}],line:196},'15':{loc:{start:{line:203,column:8},end:{line:206,column:9}},type:'if',locations:[{start:{line:203,column:8},end:{line:206,column:9}},{start:{line:203,column:8},end:{line:206,column:9}}],line:203},'16':{loc:{start:{line:203,column:12},end:{line:203,column:64}},type:'binary-expr',locations:[{start:{line:203,column:12},end:{line:203,column:34}},{start:{line:203,column:38},end:{line:203,column:64}}],line:203},'17':{loc:{start:{line:208,column:8},end:{line:211,column:9}},type:'if',locations:[{start:{line:208,column:8},end:{line:211,column:9}},{start:{line:208,column:8},end:{line:211,column:9}}],line:208},'18':{loc:{start:{line:208,column:12},end:{line:208,column:70}},type:'binary-expr',locations:[{start:{line:208,column:12},end:{line:208,column:37}},{start:{line:208,column:41},end:{line:208,column:70}}],line:208},'19':{loc:{start:{line:225,column:8},end:{line:228,column:9}},type:'if',locations:[{start:{line:225,column:8},end:{line:228,column:9}},{start:{line:225,column:8},end:{line:228,column:9}}],line:225},'20':{loc:{start:{line:242,column:8},end:{line:245,column:9}},type:'if',locations:[{start:{line:242,column:8},end:{line:245,column:9}},{start:{line:242,column:8},end:{line:245,column:9}}],line:242},'21':{loc:{start:{line:255,column:16},end:{line:255,column:67}},type:'if',locations:[{start:{line:255,column:16},end:{line:255,column:67}},{start:{line:255,column:16},end:{line:255,column:67}}],line:255},'22':{loc:{start:{line:255,column:20},end:{line:255,column:58}},type:'binary-expr',locations:[{start:{line:255,column:20},end:{line:255,column:27}},{start:{line:255,column:31},end:{line:255,column:58}}],line:255},'23':{loc:{start:{line:270,column:16},end:{line:270,column:66}},type:'if',locations:[{start:{line:270,column:16},end:{line:270,column:66}},{start:{line:270,column:16},end:{line:270,column:66}}],line:270},'24':{loc:{start:{line:270,column:20},end:{line:270,column:57}},type:'binary-expr',locations:[{start:{line:270,column:20},end:{line:270,column:27}},{start:{line:270,column:31},end:{line:270,column:57}}],line:270},'25':{loc:{start:{line:284,column:12},end:{line:286,column:13}},type:'if',locations:[{start:{line:284,column:12},end:{line:286,column:13}},{start:{line:284,column:12},end:{line:286,column:13}}],line:284},'26':{loc:{start:{line:284,column:36},end:{line:284,column:114}},type:'binary-expr',locations:[{start:{line:284,column:36},end:{line:284,column:79}},{start:{line:284,column:83},end:{line:284,column:114}}],line:284}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0,'74':0,'75':0,'76':0,'77':0,'78':0,'79':0,'80':0,'81':0,'82':0,'83':0,'84':0,'85':0,'86':0,'87':0,'88':0,'89':0,'90':0,'91':0,'92':0,'93':0,'94':0,'95':0,'96':0,'97':0,'98':0,'99':0,'100':0,'101':0,'102':0,'103':0,'104':0,'105':0,'106':0,'107':0,'108':0,'109':0,'110':0,'111':0,'112':0,'113':0,'114':0,'115':0,'116':0,'117':0,'118':0,'119':0,'120':0,'121':0,'122':0,'123':0,'124':0,'125':0,'126':0,'127':0,'128':0,'129':0,'130':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0],'5':[0,0],'6':[0,0],'7':[0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0],'12':[0,0],'13':[0,0],'14':[0,0],'15':[0,0],'16':[0,0],'17':[0,0],'18':[0,0],'19':[0,0],'20':[0,0],'21':[0,0],'22':[0,0],'23':[0,0],'24':[0,0],'25':[0,0],'26':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const EventEmitter=(++cov_2921q96vh4.s[0],require('events'));const R=(++cov_2921q96vh4.s[1],require('ramda'));const Db=(++cov_2921q96vh4.s[2],require('../util/db'));const Blocks=(++cov_2921q96vh4.s[3],require('./blocks'));const Block=(++cov_2921q96vh4.s[4],require('./block'));const Transactions=(++cov_2921q96vh4.s[5],require('./transactions'));const TransactionAssertionError=(++cov_2921q96vh4.s[6],require('./transactionAssertionError'));const BlockAssertionError=(++cov_2921q96vh4.s[7],require('./blockAssertionError'));const BlockchainAssertionError=(++cov_2921q96vh4.s[8],require('./blockchainAssertionError'));// Database settings
const BLOCKCHAIN_FILE=(++cov_2921q96vh4.s[9],'blocks.json');const TRANSACTIONS_FILE=(++cov_2921q96vh4.s[10],'transactions.json');// Proof-of-work difficulty settings
const BASE_DIFFICULTY=(++cov_2921q96vh4.s[11],Number.MAX_SAFE_INTEGER);const EVERY_X_BLOCKS=(++cov_2921q96vh4.s[12],5);const POW_CURVE=(++cov_2921q96vh4.s[13],5);// Mining settings
// INFO: Usually the mining reward decreases over time. See https://en.bitcoin.it/wiki/Mining#Reward.
const MINING_REWARD=(++cov_2921q96vh4.s[14],5000000000);class Blockchain{constructor(dbName){++cov_2921q96vh4.f[0];++cov_2921q96vh4.s[15];this.blocksDb=new Db('data/'+dbName+'/'+BLOCKCHAIN_FILE,new Blocks());++cov_2921q96vh4.s[16];this.transactionsDb=new Db('data/'+dbName+'/'+TRANSACTIONS_FILE,new Transactions());// INFO: In this implementation the database is a file and every time data is saved it rewrites the file, probably it should be a more robust database for performance reasons
++cov_2921q96vh4.s[17];this.blocks=this.blocksDb.read(Blocks);++cov_2921q96vh4.s[18];this.transactions=this.transactionsDb.read(Transactions);// Some places uses the emitter to act after some data is changed
++cov_2921q96vh4.s[19];this.emitter=new EventEmitter();++cov_2921q96vh4.s[20];this.init();}init(){++cov_2921q96vh4.f[1];++cov_2921q96vh4.s[21];// Create the genesis block if the blockchain is empty
if(this.blocks.length==0){++cov_2921q96vh4.b[0][0];++cov_2921q96vh4.s[22];console.info('Blockchain empty, adding genesis block');++cov_2921q96vh4.s[23];this.blocks.push(Block.genesis);++cov_2921q96vh4.s[24];this.blocksDb.write(this.blocks);}else{++cov_2921q96vh4.b[0][1];}// Remove transactions that are in the blockchain
++cov_2921q96vh4.s[25];console.info('Removing transactions that are in the blockchain');++cov_2921q96vh4.s[26];R.forEach(this.removeBlockTransactionsFromTransactions.bind(this),this.blocks);}getAllBlocks(){++cov_2921q96vh4.f[2];++cov_2921q96vh4.s[27];return this.blocks;}getBlockByIndex(index){++cov_2921q96vh4.f[3];++cov_2921q96vh4.s[28];return R.find(R.propEq('index',index),this.blocks);}getBlockByHash(hash){++cov_2921q96vh4.f[4];++cov_2921q96vh4.s[29];return R.find(R.propEq('hash',hash),this.blocks);}getLastBlock(){++cov_2921q96vh4.f[5];++cov_2921q96vh4.s[30];return R.last(this.blocks);}getDifficulty(index){++cov_2921q96vh4.f[6];++cov_2921q96vh4.s[31];// INFO: The difficulty is the formula that naivecoin choose to check the proof a work, this number is later converted to base 16 to represent the minimal initial hash expected value
// INFO: Usually this could be a formula based on time. Eg.: Check how long it took to mine X blocks over a period of time and then decrease/increase the difficulty based on that. See https://en.bitcoin.it/wiki/Difficulty
// Calculates the difficulty based on the index since the difficulty value increases every X blocks.
return Math.max(Math.floor(BASE_DIFFICULTY/Math.pow(Math.floor((((++cov_2921q96vh4.b[1][0],index)||(++cov_2921q96vh4.b[1][1],this.blocks.length))+1)/EVERY_X_BLOCKS)+1,POW_CURVE)),0);}getAllTransactions(){++cov_2921q96vh4.f[7];++cov_2921q96vh4.s[32];return this.transactions;}getTransactionById(id){++cov_2921q96vh4.f[8];++cov_2921q96vh4.s[33];return R.find(R.propEq('id',id),this.transactions);}getTransactionFromBlocks(transactionId){++cov_2921q96vh4.f[9];++cov_2921q96vh4.s[34];return R.find(R.compose(R.find(R.propEq('id',transactionId)),R.prop('transactions')),this.blocks);}replaceChain(newBlockchain){++cov_2921q96vh4.f[10];++cov_2921q96vh4.s[35];// It doesn't make sense to replace this blockchain by a smaller one
if(newBlockchain.length<=this.blocks.length){++cov_2921q96vh4.b[2][0];++cov_2921q96vh4.s[36];console.error('Blockchain shorter than the current blockchain');++cov_2921q96vh4.s[37];throw new BlockchainAssertionError('Blockchain shorter than the current blockchain');}else{++cov_2921q96vh4.b[2][1];}// Verify if the new blockchain is correct
++cov_2921q96vh4.s[38];this.checkChain(newBlockchain);// Get the blocks that diverges from our blockchain
++cov_2921q96vh4.s[39];console.info('Received blockchain is valid. Replacing current blockchain with received blockchain');let newBlocks=(++cov_2921q96vh4.s[40],R.takeLast(newBlockchain.length-this.blocks.length,newBlockchain));// Add each new block to the blockchain
++cov_2921q96vh4.s[41];R.forEach(block=>{++cov_2921q96vh4.f[11];++cov_2921q96vh4.s[42];this.addBlock(block,false);},newBlocks);++cov_2921q96vh4.s[43];this.emitter.emit('blockchainReplaced',newBlocks);}checkChain(blockchainToValidate){++cov_2921q96vh4.f[12];++cov_2921q96vh4.s[44];// Check if the genesis block is the same
if(JSON.stringify(blockchainToValidate[0])!==JSON.stringify(Block.genesis)){++cov_2921q96vh4.b[3][0];++cov_2921q96vh4.s[45];console.error('Genesis blocks aren\'t the same');++cov_2921q96vh4.s[46];throw new BlockchainAssertionError('Genesis blocks aren\'t the same');}else{++cov_2921q96vh4.b[3][1];}// Compare every block to the previous one (it skips the first one, because it was verified before)
++cov_2921q96vh4.s[47];try{++cov_2921q96vh4.s[48];for(let i=1;i<blockchainToValidate.length;i++){++cov_2921q96vh4.s[49];this.checkBlock(blockchainToValidate[i],blockchainToValidate[i-1]);}}catch(ex){++cov_2921q96vh4.s[50];console.error('Invalid block sequence');++cov_2921q96vh4.s[51];throw new BlockchainAssertionError('Invalid block sequence',null,ex);}++cov_2921q96vh4.s[52];return true;}addBlock(newBlock,emit=(++cov_2921q96vh4.b[4][0],true)){++cov_2921q96vh4.f[13];++cov_2921q96vh4.s[53];// It only adds the block if it's valid (we need to compare to the previous one)
if(this.checkBlock(newBlock,this.getLastBlock())){++cov_2921q96vh4.b[5][0];++cov_2921q96vh4.s[54];this.blocks.push(newBlock);++cov_2921q96vh4.s[55];this.blocksDb.write(this.blocks);// After adding the block it removes the transactions of this block from the list of pending transactions
++cov_2921q96vh4.s[56];this.removeBlockTransactionsFromTransactions(newBlock);++cov_2921q96vh4.s[57];console.info(`Block added: ${newBlock.hash}`);++cov_2921q96vh4.s[58];console.debug(`Block added: ${JSON.stringify(newBlock)}`);++cov_2921q96vh4.s[59];if(emit){++cov_2921q96vh4.b[6][0];++cov_2921q96vh4.s[60];this.emitter.emit('blockAdded',newBlock);}else{++cov_2921q96vh4.b[6][1];}++cov_2921q96vh4.s[61];return newBlock;}else{++cov_2921q96vh4.b[5][1];}}addTransaction(newTransaction,emit=(++cov_2921q96vh4.b[7][0],true)){++cov_2921q96vh4.f[14];++cov_2921q96vh4.s[62];// It only adds the transaction if it's valid
if(this.checkTransaction(newTransaction)){++cov_2921q96vh4.b[8][0];++cov_2921q96vh4.s[63];this.transactions.push(newTransaction);++cov_2921q96vh4.s[64];this.transactionsDb.write(this.transactions);++cov_2921q96vh4.s[65];console.info(`Transaction added: ${newTransaction.id}`);++cov_2921q96vh4.s[66];console.debug(`Transaction added: ${JSON.stringify(newTransaction)}`);++cov_2921q96vh4.s[67];if(emit){++cov_2921q96vh4.b[9][0];++cov_2921q96vh4.s[68];this.emitter.emit('transactionAdded',newTransaction);}else{++cov_2921q96vh4.b[9][1];}++cov_2921q96vh4.s[69];return newTransaction;}else{++cov_2921q96vh4.b[8][1];}}removeBlockTransactionsFromTransactions(newBlock){++cov_2921q96vh4.f[15];++cov_2921q96vh4.s[70];this.transactions=R.reject(transaction=>{++cov_2921q96vh4.f[16];++cov_2921q96vh4.s[71];return R.find(R.propEq('id',transaction.id),newBlock.transactions);},this.transactions);++cov_2921q96vh4.s[72];this.transactionsDb.write(this.transactions);}checkBlock(newBlock,previousBlock){++cov_2921q96vh4.f[17];const blockHash=(++cov_2921q96vh4.s[73],newBlock.toHash());++cov_2921q96vh4.s[74];if(previousBlock.index+1!==newBlock.index){++cov_2921q96vh4.b[10][0];++cov_2921q96vh4.s[75];// Check if the block is the last one
console.error(`Invalid index: expected '${previousBlock.index+1}' got '${newBlock.index}'`);++cov_2921q96vh4.s[76];throw new BlockAssertionError(`Invalid index: expected '${previousBlock.index+1}' got '${newBlock.index}'`);}else{++cov_2921q96vh4.b[10][1];++cov_2921q96vh4.s[77];if(previousBlock.hash!==newBlock.previousHash){++cov_2921q96vh4.b[11][0];++cov_2921q96vh4.s[78];// Check if the previous block is correct
console.error(`Invalid previoushash: expected '${previousBlock.hash}' got '${newBlock.previousHash}'`);++cov_2921q96vh4.s[79];throw new BlockAssertionError(`Invalid previoushash: expected '${previousBlock.hash}' got '${newBlock.previousHash}'`);}else{++cov_2921q96vh4.b[11][1];++cov_2921q96vh4.s[80];if(blockHash!==newBlock.hash){++cov_2921q96vh4.b[12][0];++cov_2921q96vh4.s[81];// Check if the hash is correct
console.error(`Invalid hash: expected '${blockHash}' got '${newBlock.hash}'`);++cov_2921q96vh4.s[82];throw new BlockAssertionError(`Invalid hash: expected '${blockHash}' got '${newBlock.hash}'`);}else{++cov_2921q96vh4.b[12][1];++cov_2921q96vh4.s[83];if(newBlock.getDifficulty()>=this.getDifficulty(newBlock.index)){++cov_2921q96vh4.b[13][0];++cov_2921q96vh4.s[84];// If the difficulty level of the proof-of-work challenge is correct
console.error(`Invalid proof-of-work difficulty: expected '${newBlock.getDifficulty()}' to be smaller than '${this.getDifficulty(newBlock.index)}'`);++cov_2921q96vh4.s[85];throw new BlockAssertionError(`Invalid proof-of-work difficulty: expected '${newBlock.getDifficulty()}' be smaller than '${this.getDifficulty()}'`);}else{++cov_2921q96vh4.b[13][1];}}}}// For each transaction in this block, check if it is valid
++cov_2921q96vh4.s[86];R.forEach(this.checkTransaction.bind(this),newBlock.transactions);// Check if the sum of output transactions are equal the sum of input transactions + MINING_REWARD (representing the reward for the block miner)
let sumOfInputsAmount=(++cov_2921q96vh4.s[87],R.sum(R.flatten(R.map(R.compose(R.map(R.prop('amount')),R.prop('inputs'),R.prop('data')),newBlock.transactions)))+MINING_REWARD);let sumOfOutputsAmount=(++cov_2921q96vh4.s[88],R.sum(R.flatten(R.map(R.compose(R.map(R.prop('amount')),R.prop('outputs'),R.prop('data')),newBlock.transactions))));let isInputsAmountGreaterOrEqualThanOutputsAmount=(++cov_2921q96vh4.s[89],R.gte(sumOfInputsAmount,sumOfOutputsAmount));++cov_2921q96vh4.s[90];if(!isInputsAmountGreaterOrEqualThanOutputsAmount){++cov_2921q96vh4.b[14][0];++cov_2921q96vh4.s[91];console.error(`Invalid block balance: inputs sum '${sumOfInputsAmount}', outputs sum '${sumOfOutputsAmount}'`);++cov_2921q96vh4.s[92];throw new BlockAssertionError(`Invalid block balance: inputs sum '${sumOfInputsAmount}', outputs sum '${sumOfOutputsAmount}'`,{sumOfInputsAmount,sumOfOutputsAmount});}else{++cov_2921q96vh4.b[14][1];}// Check if there is only 1 fee transaction and 1 reward transaction;
let transactionsByType=(++cov_2921q96vh4.s[93],R.countBy(R.prop('type'),newBlock.transactions));++cov_2921q96vh4.s[94];if((++cov_2921q96vh4.b[16][0],transactionsByType.fee)&&(++cov_2921q96vh4.b[16][1],transactionsByType.fee>1)){++cov_2921q96vh4.b[15][0];++cov_2921q96vh4.s[95];console.error(`Invalid fee transaction count: expected '1' got '${transactionsByType.fee}'`);++cov_2921q96vh4.s[96];throw new BlockAssertionError(`Invalid fee transaction count: expected '1' got '${transactionsByType.fee}'`);}else{++cov_2921q96vh4.b[15][1];}++cov_2921q96vh4.s[97];if((++cov_2921q96vh4.b[18][0],transactionsByType.reward)&&(++cov_2921q96vh4.b[18][1],transactionsByType.reward>1)){++cov_2921q96vh4.b[17][0];++cov_2921q96vh4.s[98];console.error(`Invalid reward transaction count: expected '1' got '${transactionsByType.reward}'`);++cov_2921q96vh4.s[99];throw new BlockAssertionError(`Invalid reward transaction count: expected '1' got '${transactionsByType.reward}'`);}else{++cov_2921q96vh4.b[17][1];}++cov_2921q96vh4.s[100];return true;}checkTransaction(transaction){++cov_2921q96vh4.f[18];++cov_2921q96vh4.s[101];// Check the transaction
transaction.check(transaction);// Verify if the transaction isn't already in the blockchain
let isNotInBlockchain=(++cov_2921q96vh4.s[102],R.all(block=>{++cov_2921q96vh4.f[19];++cov_2921q96vh4.s[103];return R.none(R.propEq('id',transaction.id),block.transactions);},this.blocks));++cov_2921q96vh4.s[104];if(!isNotInBlockchain){++cov_2921q96vh4.b[19][0];++cov_2921q96vh4.s[105];console.error(`Transaction '${transaction.id}' is already in the blockchain`);++cov_2921q96vh4.s[106];throw new TransactionAssertionError(`Transaction '${transaction.id}' is already in the blockchain`,transaction);}else{++cov_2921q96vh4.b[19][1];}// Verify if all input transactions are unspent in the blockchain
let isInputTransactionsUnspent=(++cov_2921q96vh4.s[107],R.all(R.equals(false),R.flatten(R.map(txInput=>{++cov_2921q96vh4.f[20];++cov_2921q96vh4.s[108];return R.map(R.pipe(R.prop('transactions'),R.map(R.pipe(R.path(['data','inputs']),R.contains({transaction:txInput.transaction,index:txInput.index})))),this.blocks);},transaction.data.inputs))));++cov_2921q96vh4.s[109];if(!isInputTransactionsUnspent){++cov_2921q96vh4.b[20][0];++cov_2921q96vh4.s[110];console.error(`Not all inputs are unspent for transaction '${transaction.id}'`);++cov_2921q96vh4.s[111];throw new TransactionAssertionError(`Not all inputs are unspent for transaction '${transaction.id}'`,transaction.data.inputs);}else{++cov_2921q96vh4.b[20][1];}++cov_2921q96vh4.s[112];return true;}getUnspentTransactionsForAddress(address){++cov_2921q96vh4.f[21];// Create a list of all transactions outputs found for an address (or all).
let txOutputs=(++cov_2921q96vh4.s[113],[]);++cov_2921q96vh4.s[114];R.forEach(R.pipe(R.prop('transactions'),R.forEach(transaction=>{++cov_2921q96vh4.f[22];++cov_2921q96vh4.s[115];R.forEachObjIndexed((txOutput,index)=>{++cov_2921q96vh4.f[23];++cov_2921q96vh4.s[116];if((++cov_2921q96vh4.b[22][0],address)&&(++cov_2921q96vh4.b[22][1],txOutput.address!=address)){++cov_2921q96vh4.b[21][0];++cov_2921q96vh4.s[117];return;}else{++cov_2921q96vh4.b[21][1];}++cov_2921q96vh4.s[118];txOutputs.push({transaction:transaction.id,index:index,amount:txOutput.amount,address:txOutput.address});},transaction.data.outputs);})),this.blocks);// Create a list of all transactions inputs found for an address (or all).
let txInputs=(++cov_2921q96vh4.s[119],[]);++cov_2921q96vh4.s[120];R.forEach(R.pipe(R.prop('transactions'),R.forEach(R.pipe(R.path(['data','inputs']),R.forEach(txInput=>{++cov_2921q96vh4.f[24];++cov_2921q96vh4.s[121];if((++cov_2921q96vh4.b[24][0],address)&&(++cov_2921q96vh4.b[24][1],txInput.address!=address)){++cov_2921q96vh4.b[23][0];++cov_2921q96vh4.s[122];return;}else{++cov_2921q96vh4.b[23][1];}++cov_2921q96vh4.s[123];txInputs.push({transaction:txInput.transaction,index:txInput.index,amount:txInput.amount,address:txInput.address});})))),this.blocks);// Cross both lists and find transactions outputs without a corresponding transaction input
let unspentTransactionOutput=(++cov_2921q96vh4.s[124],[]);++cov_2921q96vh4.s[125];R.forEach(txOutput=>{++cov_2921q96vh4.f[25];++cov_2921q96vh4.s[126];if(!R.any(txInput=>{++cov_2921q96vh4.f[26];++cov_2921q96vh4.s[127];return(++cov_2921q96vh4.b[26][0],txInput.transaction==txOutput.transaction)&&(++cov_2921q96vh4.b[26][1],txInput.index==txOutput.index);},txInputs)){++cov_2921q96vh4.b[25][0];++cov_2921q96vh4.s[128];unspentTransactionOutput.push(txOutput);}else{++cov_2921q96vh4.b[25][1];}},txOutputs);++cov_2921q96vh4.s[129];return unspentTransactionOutput;}}++cov_2921q96vh4.s[130];module.exports=Blockchain;