var cov_lkiam1mi0=function(){var path='/home/andrews/naivecoin/lib/util/cryptoUtil.js',hash='08651cd6d842ed3475ce2b1001dc2a63e9112059',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/andrews/naivecoin/lib/util/cryptoUtil.js',statementMap:{'0':{start:{line:1,column:15},end:{line:1,column:32}},'1':{start:{line:5,column:24},end:{line:5,column:87}},'2':{start:{line:6,column:22},end:{line:6,column:81}},'3':{start:{line:7,column:8},end:{line:7,column:23}},'4':{start:{line:11,column:8},end:{line:11,column:72}},'5':{start:{line:15,column:0},end:{line:15,column:28}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:4,column:4},end:{line:4,column:5}},loc:{start:{line:4,column:21},end:{line:8,column:5}},line:4},'1':{name:'(anonymous_1)',decl:{start:{line:10,column:4},end:{line:10,column:5}},loc:{start:{line:10,column:31},end:{line:12,column:5}},line:10}},branchMap:{'0':{loc:{start:{line:5,column:24},end:{line:5,column:87}},type:'cond-expr',locations:[{start:{line:5,column:51},end:{line:5,column:70}},{start:{line:5,column:73},end:{line:5,column:87}}],line:5},'1':{loc:{start:{line:10,column:20},end:{line:10,column:29}},type:'default-arg',locations:[{start:{line:10,column:27},end:{line:10,column:29}}],line:10}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},f:{'0':0,'1':0},b:{'0':[0,0],'1':[0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const crypto=(++cov_lkiam1mi0.s[0],require('crypto'));class CryptoUtil{static hash(any){++cov_lkiam1mi0.f[0];let anyString=(++cov_lkiam1mi0.s[1],typeof any=='object'?(++cov_lkiam1mi0.b[0][0],JSON.stringify(any)):(++cov_lkiam1mi0.b[0][1],any.toString()));let anyHash=(++cov_lkiam1mi0.s[2],crypto.createHash('sha256').update(anyString).digest('hex'));++cov_lkiam1mi0.s[3];return anyHash;}static randomId(size=(++cov_lkiam1mi0.b[1][0],64)){++cov_lkiam1mi0.f[1];++cov_lkiam1mi0.s[4];return crypto.randomBytes(Math.floor(size/2)).toString('hex');}}++cov_lkiam1mi0.s[5];module.exports=CryptoUtil;